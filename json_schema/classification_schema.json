{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Classification Schema",
  "description": "Information about the classification process performed by sits.rep.",
  "type": "object",
  "properties":{
	"tree": {
	      "description": "Project name where the process is stored.",
		  "type": "string",
		  "examples" : ["deep_learning", "tree_process_svm", "tree_process_deeplearning"]
        },
	"process": {
		"description": "New process name.",
		"type": "string",
		"examples": ["pos_bayesian", "merge"]
	},
	"seed": {
		"description": "Execution seed value.",
		"type": "integer",
		"examples": [4,123,68]
	},
	"script": {
		"description": "Name and extension of the executed script.",
		"type": "string",
		"examples": ["classification.R"]
	},
	"import": {
		"description": "Name and extension of the executed script.",
		"type": "array",
		"items": {
			"type": "object",
			"properties": {
				"library" : {
					"$ref": "#/definitions/library"
				},
				"dependencies": {
					"description": "Dependency libraries in a library",
					"type": "array",
					"items":{
						"$ref": "#/definitions/library"
					}
				}
			}
		}
	},
	"train": {
		"directory": {
			"description": "Main directory where the trained model will be stored.",
			"type": "string",
			"examples": ["train"]
		},
		"file": {
			"description": "Trained model file name.",
			"type": "string",
			"examples": ["model.h5"]
		}
	}, 
	"coverage": {
		"directory": {
			"description": "Main directory where the sfc file will be stored.",
			"type": "string",
			"examples": ["coverage"]
		},
		"geom": {
			"description": "Sfc object name to filter tiles that intersects the given geometry.",
			"type": "string",
			"examples": ["geom/geom.shp"]
		},
		"service":{
			"description": "The chosen coverage service provided by the sits package.",
			"type": "string",
			"examples": ["EOCubes"]
		},
		"name": {
			"description": "Name of the coverage.",
			"type": "string",
			"examples": ["MOD13Q1/006"]
		},
		"timeline": {
			"description": "The timelines of the coverage.",
			"type": "string",
			"examples": ["12 month"]
		}
	},
	"result": {
		"type": "object",
		"properties": {
			"file": {
				"description": "Checks whether the process generated any output files.",
				"type": "boolean",
				"examples": ["true", "false"]
			},
			"rds": {
				"description": "Checks whether the process generated a output rds.",
				"type": "boolean",
				"examples": ["true", "false"]
			}
		}		
	},
	"hash": {
		"description": "Checks whether the process has generated a hash file about the results.",
		"type": "boolean",
		"examples": ["true", "false"]
	}	        	
  },
"required": [ "tree", "process", "seed", "script", "result", "hash"],
"definitions": {
	"library": {
		"description" : "Script dependency libraries.",
		"type": "object",
		"properties": {
			"name": {
				"description": "Library name.",
				"type": "string",
				"examples": ["sits", "tibble"]
			},
			"version" : {
				"description": "Library version.",
				"type": "string",
				"examples": ["1.2", "3-4.5","1.8-3"]
				},
			"git_commit": {
				"description": "Hash code of the commit in case the library was installed through a GitHub repository.",
				"type":"string",
				"examples": ["80c2d8c70fa06bec6d5457b006e6a47b897d0359"]
			},
			"git_repository" : {
				"description": "Library GitHub repository.",
				"type":"string",
				"examples": ["e-sensing"]
			}
		},
		"required": [ "name" ]
	}
}
}